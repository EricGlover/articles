<sub>&#x1F6A8; <strong>Autogenerated!</strong> See <a href="https://github.com/ponyfoo/articles/tree/noindex/contributing.markdown"><code>contributing.markdown</code></a> for details. See also: <a href="https://ponyfoo.com/articles/stateful-regular-expressions">web version</a>.</sub>

<a href="https://ponyfoo.com/articles/stateful-regular-expressions"><div></div></a>

<h1>Are Regular Expressions Stateful?</h1>

<p><kbd>regex</kbd> <kbd>bug</kbd> <kbd>chrome</kbd></p>

<blockquote><p>I seem to have stumbled across a bug regarding regular expressions using the <code>g</code> modifier, where they seem to preserve internal state across calls to <code>RegExp.prototype.test</code>&#x2026;</p></blockquote>

<div><p>I seem to have stumbled across a bug regarding regular expressions using the <code class="md-code md-code-inline">g</code> modifier, where they seem to preserve internal state across calls to <code class="md-code md-code-inline">RegExp.prototype.test</code>. I&#x2019;m looking for confirmation or a <em>&#x201C;you&#x2019;re stupid, this is what is going on&#x201D;</em> dismissal.</p></div>

<div></div>

<div><p>Apparently regular expressions with the <code class="md-code md-code-inline">g</code> modifier are stateful. See for yourself.</p></div>

<div><pre class="md-code-block"><code class="md-code md-lang-xml"><span class="md-code-tag">&lt;<span class="md-code-title">button</span> <span class="md-code-attribute">id</span>=<span class="md-code-value">&apos;bad&apos;</span>&gt;</span>Wait, WHAT?<span class="md-code-tag">&lt;/<span class="md-code-title">button</span>&gt;</span>
</code></pre> <pre class="md-code-block"><code class="md-code md-lang-javascript">stateful = <span class="md-code-regexp">/button/ig</span>;
bad.onclick = <span class="md-code-function"><span class="md-code-keyword">function</span> <span class="md-code-params">(e)</span> </span>{
  alert(stateful.test(e.target.tagName));
};
</code></pre> <p>The button alternates between alerting <code class="md-code md-code-inline">true</code> and <code class="md-code md-code-inline">false</code> in Google Chrome <code class="md-code md-code-inline">38.0.2125.122</code>, and also on Firefox <code class="md-code md-code-inline">31</code>.</p> <p>As it turns out, this is the <em>&#x201C;expected&#x201D;</em> behavior. I did not expect that. Regular expressions with the <code class="md-code md-code-inline">g</code> modifier on them will keep track of the <code class="md-code md-code-inline">lastIndex</code> where a match occurred, even across calls to <code class="md-code md-code-inline">.test</code>.</p> <iframe src="https://codepen.io/bevacqua/fullembedgrid/xbxqQQ/?type=embed&amp;safe=true"></iframe> <p>You can check out the <a href="https://codepen.io/bevacqua/full/xbxqQQ/" target="_blank" aria-label="What is going on?">live example on CodePen</a>, too.</p></div>
