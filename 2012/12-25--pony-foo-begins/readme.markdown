<sub>&#x1F6A8; <strong>Autogenerated!</strong> See <a href="https://github.com/ponyfoo/articles/tree/noindex/contributing.markdown"><code>contributing.markdown</code></a> for details. See also: <a href="https://ponyfoo.com/articles/pony-foo-begins">web version</a>.</sub>

<a href="https://ponyfoo.com/articles/pony-foo-begins"><div><img src="https://i.imgur.com/L7OocY3.jpg" alt="Pony Foo begins"></div></a>

<h1>Pony Foo begins</h1>

<p><kbd>ponyfoo</kbd></p>

<blockquote><p>As I start writing this post, I set out with a purpose. To write a micro-blogging engine. The language of choice is <em>Node.JS</em>. I chose this language because I want to see &#x2026;</p></blockquote>

<div><p>As I start writing this post, I set out with a purpose. To write a micro-blogging engine. The language of choice is <em>Node.JS</em>. I chose this language because I want to see how I fare in light of new horizons&#x2026;</p></div>

<blockquote></blockquote>

<div><h1 id="past-lives">Past Lives</h1> <p>Keep in mind this idea springed in my mind just yesterday, but I&#x2019;ll try to keep my development cycles <strong>as <em>lean</em> as possible</strong>, in order to entertain myself. In the past most of my self-driven projects lead to nowhere because <strong>I kept focusing on <em>non-functional aspects</em></strong> like performance, code-tuning, including but not limited to implementing wild and new sparkly technologies.</p> <p>That approach often lead to projects where I would spend a whole year implementing and code-tuning an <em>MVC</em> application in <em><a href="http://asp.net/" target="_blank" rel="noopener noreferrer">ASP.NET</a> 3</em>, which did all the error handling, real-time logging, corner-case handling that you could imagine, but barely consisted of a couple of forms.</p> <p>This time instead, I&#x2019;m eager to launch a <strong>minimal version</strong> of the site online <em>as soon as humanly possible</em>, and then build on it, adding features on the go. This will also give me the feel of how working with <strong>Node.JS</strong> on a production environment feels like.</p></div>

<div><h1 id="expectations">Expectations</h1> <p>I come from a strong <em>C#</em> background, although I consider myself to have a pretty decent front-end skillset as well; I figure this will help immensely as I delve into <em>Node.JS</em>. I already took care of a few fundamental decisions, which I expect to be able to fulfill:</p> <ul> <li><a href="http://youtu.be/jo_B4LTHi3I" target="_blank" rel="noopener noreferrer" aria-label="Introduction to Node.JS">Node.JS</a> on the server-side.</li> <li><a href="http://youtu.be/tFp9pZ6U0PE" target="_blank" rel="noopener noreferrer" aria-label="Introduction to MongoDB">MongoDB</a> as the database of choice.</li> <li><em>Javascript</em> on the client-side.</li> <li><a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener noreferrer" aria-label="Introduction to Markdown">Markdown</a> will be used to <em>write</em> and <em>display</em> blog posts.</li> </ul> <p>I decided on <em>Node.JS</em> in the back-end because even though it&#x2019;s an entirely <em>new</em> language to me, I sense it will feel familiar working with it, given my past <em>front-end inclination</em>. <em>MongoDB</em> felt natural to me, as I find the idea of using <em>JSON</em> across every single layer <strong>very</strong> appealing.</p> <p><em>Javascript</em> on the client-side is therefore a no-brainer, and I&#x2019;ll drift away from <em>development-crippling</em> practices I leant towards in the past, like progressive enhancement where I&#x2019;d support even <strong>noscript</strong>, making development twice as complicated. I&#x2019;m shifting away from that, in order to be able to maintain the level of <em>leanness</em> I want to achieve here.</p> <p><em>Markdown</em> is a simple yet powerful presentation language, and one I feel really comfortable with. Besides there are <a href="http://code.google.com/p/pagedown/" target="_blank" rel="noopener noreferrer" aria-label="pagedown by StackOverflow">open-source distributions</a> that make developing around <em>Markdown</em> a breeze.</p> <p>The mere notion of having <a href="https://ponyfoo.com/articles/javascript-javascript-javascript" aria-label="JavaScript JavaScript JavaScript">JavaScript</a> on the server-side, <a href="https://ponyfoo.com/articles/javascript-javascript-javascript" aria-label="Javascript Javascript Javascript">JavaScript</a> on the client-side, and <a href="https://ponyfoo.com/articles/javascript-javascript-javascript" aria-label="Javascript Javascript Javascript">JavaScript</a> on the database, makes me extremely enthusiastic about this project going forward. Time will tell how <em>wondrous</em> this actually is, if <em>at all</em>.</p> <h1 id="where-do-we-go-from-here">Where do we go from here?</h1> <p>Right now, I&#x2019;m writing this post on <a href="http://notepad-plus-plus.org/" target="_blank" rel="noopener noreferrer" aria-label="Notepad++"><em>Notepad++</em></a> and I haven&#x2019;t even begun working on the blog application. Even though I&#x2019;ve already allocated a public GitHub repository to the task, and I&#x2019;m code-naming the project <a href="https://github.com/bevacqua/ponyfoo" target="_blank" rel="noopener noreferrer" aria-label="GitHub repository">NBrut</a>.</p> <p>Since I want <em>leanness</em> to be a defining characteristic of how I face <strong>Pony Foo</strong>, I&#x2019;m using this post as a way to <em>force myself</em> into being able to go live as soon as I&#x2019;m able to. In order to do that, I have to start by working on implementing <em>Markdown</em>, since it&#x2019;s probably the part of the application I&#x2019;m most comfortable coding. I&#x2019;ll figure out how to solve the rest as I go along.</p> <blockquote> <p><strong>Pony Foo</strong> launched on <strong><em>January 18, 2013</em></strong>.</p> </blockquote></div>
