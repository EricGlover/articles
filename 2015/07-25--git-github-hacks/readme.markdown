<sub>&#x1F6A8; <strong>Autogenerated!</strong> See <a href="https://github.com/ponyfoo/articles/tree/noindex/contributing.markdown"><code>contributing.markdown</code></a> for details. See also: <a href="https://ponyfoo.com/articles/git-github-hacks">web version</a>.</sub>

<a href="https://ponyfoo.com/articles/git-github-hacks"><div></div></a>

<h1>Git and GitHub Hacks</h1>

<p><kbd>food-for-thought</kbd> <kbd>git</kbd> <kbd>github</kbd> <kbd>hacks</kbd></p>

<blockquote><p>These are short-form <mark class="md-mark">&#x201C;thoughts&#x201D;</mark>, in addition to the usual longer-form articles in the blog. The <a href="https://ponyfoo.com/articles/food-for-thought-begins">goal</a> is to publish <a href="https://ponyfoo.com/articles/tagged/food-for-thought">one of these</a> every weekday. I&#x2019;d &#x2026;</p></blockquote>

<div><p>These are short-form <mark class="md-mark">&#x201C;thoughts&#x201D;</mark>, in addition to the usual longer-form articles in the blog. The <a href="https://ponyfoo.com/articles/food-for-thought-begins">goal</a> is to publish <a href="https://ponyfoo.com/articles/tagged/food-for-thought">one of these</a> every weekday. I&#x2019;d love to know what you think. You may send your questions to <a href="mailto:thoughts@ponyfoo.com">thoughts@ponyfoo.com</a>. I&#x2019;ll try to answer them over email and I <em>may publish them here, with your approval</em>. I also write <em>thoughts</em> about the <mark class="md-mark">current state of front-end development</mark>, and opinions on other people&#x2019;s articles. You can use the form to the right <em>(near the bottom in mobile)</em> to <mark class="md-mark">subscribe via email</mark>.</p></div>

<blockquote></blockquote>

<div><p>There are some neat tricks you can do to improve your life on GitHub, &#x2013; and when using <code class="md-code md-code-inline">git</code> &#x2013; as well as the lives of those around you. I wanted to showcase some of them here. Let&#x2019;s start with a browser extension.</p> <h1 id="github-linker">GitHub Linker</h1> <p>This browser extension allows you to navigate across CommonJS <code class="md-code md-code-inline">require</code> calls and <code class="md-code md-code-inline">package.json</code> declarations simply by clicking on the linkified names of the packages. It&#x2019;s quite convenient.</p> <p><a href="https://github.com/github-linker/chrome-extension" target="_blank"><img src="https://i.imgur.com/ARH7d4Q.gif" alt="github-linker"></a></p> <p>Naturally, you can get it <a href="https://github.com/github-linker/chrome-extension" target="_blank">on GitHub</a>.</p></div>

<div><h1 id="squashing-commits">Squashing Commits</h1> <p>One of the first things I&#x2019;ve learned when I started doing open-source was to squash my commits. Open-source folk like their commit logs clean and readable, a searchable and meaningful history of their repository. Squashing means turning a lump of commits into a single commit. This is <strong>one of the things almost every maintainer out there asks you to do</strong> before merging your PR, and you can quickly understand <em>why</em>.</p> <p>Suppose you&#x2019;ve created two commits and submitted a <a aria-label="pull request">PR</a> against a repo you like, closing a bug you&#x2019;ve filed a few hours earlier. The maintainer does some code review, asks you for a few changes, you commit some more. Now the PR has 5 commits, some of which undo work you did in the first few commits. Merging this PR as-is would <strong>add a ton of different commits</strong> for only <mark class="md-mark">one unit of work</mark> &#x2013; that is, fixing a single bug. Squashing the commits together improves readability of the changelog, and linkability of commits when referring to an individual bug fix.</p> <p>To squash your latest commits, suppose there&#x2019;s 5 of them, you can run the following commands:</p> <pre class="md-code-block"><code class="md-code md-lang-bash">git reset HEAD~<span class="md-code-number">5</span>
git add .
git commit -am <span class="md-code-string">&quot;Here&apos;s the bug fix that closes #28&quot;</span>
git push --force
</code></pre> <p>After running <code class="md-code md-code-inline">git reset</code>, all your work will be unstaged, so you can then create another commit. This will rewrite history in the branch for your PR, but that&#x2019;s okay because nobody depends on that until it gets merged. And when that happens, only one commit will be pulled by everyone else!</p> <h1 id="amending-your-commits">Amending your commits</h1> <p>If you want to change your latest commit before pushing &#x2013; <mark class="md-mark">because your commit message was a placeholder like <em>&#x201C;foo&#x201D;</em></mark> &#x2013; you can use <code class="md-code md-code-inline">--amend</code>, like so:</p> <pre class="md-code-block"><code class="md-code md-lang-bash">git commit --amend -m <span class="md-code-string">&quot;Some other commit message.&quot;</span>
</code></pre> <p>If you had already pushed, you can still ammend the commit, but then you&#x2019;ll have to force-push. Again, <strong>beware</strong>, this rewrites history in <code class="md-code md-code-inline">git</code>, so it&#x2019;s best to avoid force-pushing when possible.</p> <pre class="md-code-block"><code class="md-code md-lang-bash">git push --force
</code></pre> <p>In line with squashing and amending commits, we should also take care of <em>thoughtful commit messages</em>.</p> <h1 id="commit-messages">Commit Messages</h1> <p>The message in a commit should be descriptive enough to summarize the entire changeset. A good commit message might be <code class="md-code md-code-inline">&quot;fixed #18, where a dialog box would pop up in the wrong place&quot;</code>, not so long that it becomes distracting, and not <strong>so short</strong> that it doesn&#x2019;t tell you anything about <mark class="md-mark"><em>what was changed</em></mark>.</p> <p>Something like <code class="md-code md-code-inline">&quot;foo&quot;</code> is a terrible commit message. At that point, you might as well just create a commit with an empty message. This might be useful in those situations where you just want to redeploy to trigger another build in a CI system, without visiting their web interface.</p> <pre class="md-code-block"><code class="md-code md-lang-bash">git commit --allow-empty
</code></pre> <p>Let&#x2019;s move on. What makes a good issue or pull request?</p> <h1 id="issues-and-pull-requests">Issues and Pull Requests</h1> <p>When it comes to creating an issue, you&#x2019;ll find that maintainers are much more welcoming if you&#x2019;ve put any effort beforehand. That entails:</p> <ul> <li><strong>Reading documentation</strong> about their library</li> <li>Figuring out if the issue has been <em>already reported</em></li> <li>Taking the time to isolate the issue and provide <mark class="md-mark">precise bug reports</mark></li> <li>Providing screenshots or reproduction steps</li> </ul> <p>If you do at least one of the above, your reports will be taken more seriously and probably addressed more swiftly. If you don&#x2019;t <em>&#x201C;have the time&#x201D;</em> to do research around the issue you&#x2019;re reporting, why would maintainers spend theirs fixing your issues with their library?</p> <p>While yes, it&#x2019;s in their best interest to fix broken things, it&#x2019;s also nice to see contributors who actually go through the motions of at least trying to make things easier for the maintainers.</p> <p>When it comes to pull requests, <strong>try and match the code style</strong> used in the repository you&#x2019;re contributing to. If they have a <code class="md-code md-code-inline">CONTRIBUTING.md</code> file, that&#x2019;d be a good place to learn about how they want you to approach contributions. Matching their coding style <em>will save you a lot of time</em> in back and forth, git commits, and amendments. Plus, maintainers will be grateful for it!</p> <p>Above all, <mark class="md-mark"><strong>be nice</strong></mark>. Most of us do open-source just because we like the <em>&#x201C;sharing mentality&#x201D;</em> in OSS, because we value the effort that others invest in open-source, or simply because we enjoy it. For most people however, it&#x2019;s not their day job, but something they do on their spare time. Even when it is, <em>they don&#x2019;t owe you anything</em>, so <strong>don&#x2019;t make demands</strong>.</p> <blockquote> <p>Ask nicely, and try to be helpful!</p> </blockquote> <p><mark class="md-mark">Have any questions or thoughts you&#x2019;d like me to write about?</mark> <em>Send an email to <a href="mailto:thoughts@ponyfoo.com" aria-label="Send me your questions and feedback!">thoughts@ponyfoo.com</a>.</em> Remember to <strong>subscribe</strong> if you got this far!</p></div>
