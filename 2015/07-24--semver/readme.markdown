<sub>&#x1F6A8; <strong>Autogenerated!</strong> See <a href="https://github.com/ponyfoo/articles/tree/noindex/contributing.markdown"><code>contributing.markdown</code></a> for details. See also: <a href="https://ponyfoo.com/articles/semver">web version</a>.</sub>

<a href="https://ponyfoo.com/articles/semver"><div><img src="https://i.imgur.com/BvRMxIB.jpg" alt="Pragmatic Semantic Versioning"></div></a>

<h1>Pragmatic Semantic Versioning</h1>

<p><kbd>food-for-thought</kbd> <kbd>semver</kbd> <kbd>npm</kbd> <kbd>pragmatism</kbd></p>

<blockquote><p>These are short-form <mark class="md-mark">&#x201C;thoughts&#x201D;</mark>, in addition to the usual longer-form articles in the blog. The <a href="https://ponyfoo.com/articles/food-for-thought-begins">goal</a> is to publish <a href="https://ponyfoo.com/articles/tagged/food-for-thought">one of these</a> every weekday. I&#x2019;d &#x2026;</p></blockquote>

<div><p>These are short-form <mark class="md-mark">&#x201C;thoughts&#x201D;</mark>, in addition to the usual longer-form articles in the blog. The <a href="https://ponyfoo.com/articles/food-for-thought-begins">goal</a> is to publish <a href="https://ponyfoo.com/articles/tagged/food-for-thought">one of these</a> every weekday. I&#x2019;d love to know what you think. You may send your questions to <a href="mailto:thoughts@ponyfoo.com">thoughts@ponyfoo.com</a>. I&#x2019;ll try to answer them over email and I <em>may publish them here, with your approval</em>. I also write <em>thoughts</em> about the <mark class="md-mark">current state of front-end development</mark>, and opinions on other people&#x2019;s articles. You can use the form to the right <em>(near the bottom in mobile)</em> to <mark class="md-mark">subscribe via email</mark>.</p></div>

<blockquote></blockquote>

<div><p>When it comes to semantic versioning, the definition usually depends on who you ask. Everyone has their opinion on what constitutes a <code class="md-code md-code-inline">patch</code>, what makes a <code class="md-code md-code-inline">minor</code>, and what warrants a <code class="md-code md-code-inline">major</code> version bump. In this article, I share my views. Keep in mind this is my opinion and it&#x2019;s mostly constrained to the sort of software I release: open-source modules that are usually best served with a web browser.</p></div>

<div><p>I made the clarification above because in other sorts of software, enterprise grade stuff, you might want to be more <em>&#x201C;strict&#x201D;</em> about releases. Think <mark class="md-mark">Node.js or io.js</mark>. For the majority of us, though, <strong>this is not the case</strong>.</p> <p>The <strong>consensual definition of <a href="http://semver.org/" target="_blank" aria-label="SemVer has a specification">semver</a></strong> more or less lies in the following bullet points.</p> <ul> <li><code class="md-code md-code-inline">patch</code> whenever you release bug fixes that don&#x2019;t affect the public API in the slightest</li> <li><code class="md-code md-code-inline">minor</code> whenever you make a change that can potentially affect the public API, regardless of it being a bug fix or a new feature</li> <li><code class="md-code md-code-inline">major</code> whenever you make a change that breaks expectations in the public API, such as removing an API touchpoint, changing its inputs, or its outputs</li> </ul> <p>I prefer to take <strong>a pragmatic approach</strong> to versioning, as the above is usually a hassle. Bug fixes rarely break consumer code in practice, but almost always fall in the <code class="md-code md-code-inline">minor</code> category. Consider a bug fix that someone else was using as a crutch and expected it to be a <em>&#x201C;feature&#x201D;</em>. That&#x2019;s a <code class="md-code md-code-inline">minor</code> because it breaks an expectation, even though it was a measly bug fix, and even though it wasn&#x2019;t documented, and even though <em>(chances are)</em> nobody <em>actually relied</em> on it.</p> <p>My approach is to consider these bug fixes that may or may not affect functionality a <code class="md-code md-code-inline">patch</code>, rather than a <code class="md-code md-code-inline">minor</code>. This brings me to point number two in this <mark class="md-mark">thought</mark>.</p> <h1 id="getting-rid-of-hats">Getting Rid of Hats</h1> <p>Hats <em>(and tildes)</em> in <code class="md-code md-code-inline">package.json</code> must die. Die in a fire. Die an ugly death where you burn them so they don&#x2019;t come back as undead white walkers to frostbite you into an ugly death. Becoming one of them, in turn, and devouring your loved ones.</p> <p>I&#x2019;m of course talking about <code class="md-code md-code-inline">^</code> and <code class="md-code md-code-inline">~</code>, but also about similarly dangerous operators like <code class="md-code md-code-inline">&gt;=</code> and <code class="md-code md-code-inline">*</code>. Why would you take something as precious as <code class="md-code md-code-inline">npm</code>&apos;s immutability and throw it under the bus is beyond me &#x2013; yet it&#x2019;s the default configuration value for <code class="md-code md-code-inline">npm</code>.</p> <p>After all the hard work that was put into <em>(and is being put into)</em> <code class="md-code md-code-inline">npm</code> to fix dependency hell, using the mutable dependency operators ask too much from the community. Not everyone is going to be as gentle as you might think. I have had many dependencies break on my face after doing something innocuous like <code class="md-code md-code-inline">rm -rf node_modules ; npm i</code>, and this shouldn&#x2019;t be something to worry about. Your ability to deploy safely shouldn&#x2019;t be lingering <em>just</em> on tests that make sure your dependencies didn&#x2019;t break overnight.</p> <p>There is <strong>no good reason why dependencies should be able to break overnight</strong>. I&#x2019;ll take my safe deployments over your <em>&#x201C;minor bug fixes with chances of wreaking havoc&#x201D;</em> forecasts any day!</p> <blockquote> <p><em>Run the following command. This <mark class="md-mark"><strong>madness ends today!</strong></mark></em></p> </blockquote> <pre class="md-code-block"><code class="md-code md-lang-bash">npm <span class="md-code-built_in">set</span> save-exact <span class="md-code-literal">true</span>
</code></pre> <p><mark class="md-mark">Have any questions or thoughts you&#x2019;d like me to write about?</mark> <em>Send an email to <a href="mailto:thoughts@ponyfoo.com" aria-label="Send me your questions and feedback!">thoughts@ponyfoo.com</a>.</em> Remember to <strong>subscribe</strong> if you got this far!</p></div>
