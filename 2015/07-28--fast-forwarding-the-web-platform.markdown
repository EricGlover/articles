<h1>Fast-forwarding the Web Platform</h1>

<p><kbd>web</kbd> <kbd>standards</kbd> <kbd>native</kbd> <kbd>performance</kbd></p>

<blockquote><p>Peter-Paul Koch &#x2013; or <a href="https://twitter.com/ppk" target="_blank">@ppk</a> &#x2013; has once again <a href="http://www.quirksmode.org/blog/archives/2015/07/stop_pushing_th.html" target="_blank">published a rupturing article titled &#x201C;Stop pushing the web forward&#x201D;</a> that is surely going to <em>set &#x2026;</em></p></blockquote>

<div><p>Peter-Paul Koch &#x2013; or <a href="https://twitter.com/ppk" target="_blank">@ppk</a> &#x2013; has once again <a href="http://www.quirksmode.org/blog/archives/2015/07/stop_pushing_th.html" target="_blank">published a rupturing article titled &#x201C;Stop pushing the web forward&#x201D;</a> that is surely going to <em>set the agenda for this week</em> in terms of blog posts and twitter traffic. Already, Christian Heilmann &#x2013; or <a href="https://twitter.com/codepo8" target="_blank">@codepo8</a> &#x2013; wrote a brief article mentioning how the conversation can get lost in the Twittersphere and how it&#x2019;s better to <strong>lay out your thoughts in your own blog</strong>, particularly if you&#x2019;re trying to make a thoughtful argument against something that&#x2019;s not just going to <em>meaninglessly spread like wildfire</em> &#x2013; but <strong>without any real substance</strong> to it.</p></div>

<div></div>

<div><p>In his post, <a href="https://twitter.com/ppk" target="_blank">@ppk</a> argues something that I&#x2019;ve heard before, that we would do good to consider pacing down on new developments &#x2013; and how we should focus on improving the most rudimentary things that are still so very impossible to work with on the web. While I don&#x2019;t think a moratorium, nor slowing down the pace are proper answers &#x2013; the problem is unquestionably there:</p> <blockquote> <p>How did we get to the point where we are able to have realtime bi-directional peer-to-peer communication between visitors to our site, yet we can&#x2019;t determine the styles for a measly <code class="md-code md-code-inline">&lt;select&gt;</code> input, we can&#x2019;t customize form elements like <code class="md-code md-code-inline">&lt;input type=&apos;check&apos;&gt;</code>, we can&#x2019;t use pseudo-selectors like <code class="md-code md-code-inline">:before</code> or <code class="md-code md-code-inline">:after</code> on certain elements like <code class="md-code md-code-inline">&lt;img&gt;</code> or <code class="md-code md-code-inline">&lt;input&gt;</code>, because <a href="http://stackoverflow.com/q/8012297/389745" target="_blank">these are &#x201C;replaced elements&#x201D;</a> &#x2013; <em><strong>what the hell is that?</strong></em></p> </blockquote> <p>To me, <strong>the problem is not that we are moving too fast</strong> on cutting-edge technologies such as WebRCT, HTTP 2.0, enforcing TLS, Service Workers, ES6, ES7, WebP, Web Audio, WebGL and <em>countless others</em>. Rather, <mark class="md-mark">the problem is that we are making no effort whatsoever to fix things that have been broken forever</mark>, like being able to give basic styling to form elements in a <em>non-over-engineered way</em>.</p> <p>I vehemently agree that constraints drive innovation, as <a href="https://twitter.com/ppk" target="_blank">@ppk</a> points out in his post. I think the web platform is constrained enough as is, though. However, I do get what ppk is trying to get out there &#x2013; we are worrying too much about these complicated things and missing out on the essential. For us to keep on focusing on the complicated problems we all know and love, we should deal with the inexcusable pain points of the web, such as how lousy form elements behave, how lame native form validation is <em>(where by the way, you can&#x2019;t style the validation errors consistently nor effectively)</em>, and how JavaScript ends up becoming the de-facto excuse for all of this <em>&#x201C;well you can do it with jQuery&#x201D;</em>, <em>&#x201C;well, it works if you add some JavaScript sugar cones on top&#x201D;</em>. Problem is, this is as rudimentary of an excuse as <em>&#x201C;it works on my machine&#x201D;</em>, and we all know by now that&#x2019;s <mark class="md-mark">a terrible excuse</mark>.</p> <p><em>Right?</em></p></div>

<div><h1 id="on-web-vs-native">On <em>&#x201C;Web vs. Native&#x201D;</em></h1> <p>This is the ultimate argument, right? The biggest issue here is <strong>misinformation</strong>. While, yes, obviously, the web platform is not as well-suited as native mobile apps in some ways &#x2013; you probably wouldn&#x2019;t want your mobile experience of realtime video chats to be web-based, because it might be terribly tricky to get that right, there&#x2019;s also a lot of this bandwagon effect where somebody says something and <em>almost everyone else just nods their heads in agreement</em>.</p> <h3 id="instant-articles">Instant Articles</h3> <p>A great example is one of Facebook&#x2019;s recent features being unveiled &#x2013; the so-called <em>&#x201C;Instant Articles&#x201D;</em> feature. Instant Articles is fancy marketing speak for Facebook crawling news sites that have paid <strong>a hefty fee</strong> for Facebook to do so, storing their articles in a standarized data structure of their choosing, rendering a &#x201C;faithful-enough&#x201D; version of the media site&#x2019;s article, and presenting that <em>&#x201C;view&#x201D;</em> when humans try to access one of the media site&#x2019;s pages, <strong>instead of the actual website</strong>.</p> <p><a href="http://instantarticles.fb.com/" target="_blank" aria-label="Instant Articles on Facebook"><img alt="Instant Articles demo page" class="" src="https://i.imgur.com/lG35RuG.jpg"></a></p> <p>This is useful because media sites are the bane of the web. They sometimes take double-digit seconds to load, incur several MB worth of downloads. Thus, data charges go off the roof, not to mention when the human is relying on roaming and they have to pay <strong>&#x20AC;10 for 200MB worth of content</strong>, essentially <mark class="md-mark"><strong>paying roughly &#x20AC;2 per page view</strong></mark>. Of course, you could try and pin that on the mobile networks, but they&#x2019;ve been charging insane amounts of money to roamers for over a decade, and we&#x2019;ve made it a problem only recently.</p> <p>With Instant Articles, media sites are <strong>taking the worst possible step in the right direction</strong>. They&#x2019;re effectively saying:</p> <blockquote> <p>Our site is garbage, <strong>BUT</strong>, if you visit us through Facebook, well&#x2026; then they&#x2019;ll solve our embarrassing performance issues on our behalf. If you&#x2019;re on mobile, make sure to visit our site through Facebook, otherwise it might take you seven seconds to see this page.</p> <p><em>&#x2013; Implied message from every media site on Instant Articles</em></p> </blockquote> <p><strong>This screams of missed opportunity</strong>. The notion of investing <em>tons of money</em> in ensuring that Facebook solves your performance problems when people visit your site through Facebook <strong>(and only in that case)</strong>, is as terrible of a value proposition as any. You would be way better off hiring a performance consultant like <a href="http://www.timkadlec.com/" target="_blank" aria-label="Tim Kadlec&apos;s personal website">Tim Kadlec</a> to fix your web performance issues for good.</p> <p>This brings me to my last point, the <em>&#x201C;let&#x2019;s blame our problems on the web&#x201D;</em> approach.</p> <h3 id="blaming-slowness-on-the-web-the-verge-way">Blaming slowness on the web, The Verge way</h3> <p>If you&#x2019;ve gotten this far, chances are you haven&#x2019;t missed The Verge&#x2019;s article on how <a href="http://www.theverge.com/2015/7/20/9002721/the-mobile-web-sucks" target="_blank" aria-label="The mobile web sucks, according to The Verge">&#x201C;the mobile web sucks&#x201D;</a>. In their article they basically blame the web on the fact that dozens of media deals and analytics human-data-siphoning that goes on when the page is first loaded. This is well summarized by <a href="https://github.com/lmorchard" target="_blank" aria-label="lmorchard on GitHub">Les Orchard</a> in their article.</p> <blockquote> <p>Holy crap. It took over 30 seconds. In the end, it fetched over 9.5MB across 263 HTTP requests. That&#x2019;s almost an order of magnitude more data &amp; time than needed for the article itself.</p> <p><a href="http://blog.lmorchard.com/2015/07/22/the-verge-web-sucks/" target="_blank" aria-label="The Verge&apos;s web sucks"><img alt="The Verge&apos;s web sucks" class="" src="https://i.imgur.com/ywos2Y8.png"></a></p> <p><em>Head over to <a href="http://blog.lmorchard.com/2015/07/22/the-verge-web-sucks/" target="_blank" aria-label="The Verge&apos;s web sucks">blog.lmorchard.com</a> for their full analysis.</em></p> </blockquote> <p>A couple hundred requests, almost 10MB in data transfers, how the hell do you expect the mobile web to not suck in <strong>those conditions</strong>? That page view just costed you &#x20AC;2 in data roaming charges. You can buy a couple of physical <em>WIRED</em> magazines for that cost.</p> <p>Just because <strong>your website is slow</strong> doesn&#x2019;t mean the web platform is at fault. Any platform you misuse is going to slow down to a crawl. Instead of spending time and energy figuring out who&#x2019;s to blame for your slow site, try and do something about it. Maybe you don&#x2019;t need to talk to 22 different analytics providers on every page load, <strong>maybe a single service can broadcast events on your behalf</strong> to all of those. Maybe you don&#x2019;t need to <mark class="md-mark">load 1.3MB worth of images on page load</mark>, maybe you could defer most of those, most of the ones below the fold, <em>until after the text content has loaded</em>.</p> <p><em>&#x201C;Dis-services&#x201D;</em> like <a href="http://t.co/" target="_blank">t.co</a> don&#x2019;t do much in the way of helping, either.</p> <p>It&#x2019;s time for media sites to begin acting as <strong>media</strong> sites and stop acting as advertisement platforms that only care about cramming more ads into their pages. As long as that keeps happening, their websites will continue to be as slow as snails.</p> <p>It&#x2019;s time we <a href="https://ponyfoo.com/articles/stop-breaking-the-web" aria-label="Stop Breaking the Web on Pony Foo">stop breaking the web</a>, we start <a href="http://timkadlec.com/2015/05/choosing-performance/" target="_blank" aria-label="Choosing Performance by Tim Kadlec">building performance into our sites</a>, and we start caring about the fundamentals of the web platform. Otherwise, how can we expect to advance the more sophisticated aspects of its development?</p> <h3 id="back-to-the-classical-elements">Back to the Classical Elements</h3> <p>Consider this. If <code class="md-code md-code-inline">&lt;select&gt;</code>, <code class="md-code md-code-inline">&lt;input&gt;</code>, <code class="md-code md-code-inline">&lt;textarea&gt;</code>, and client-side validation were to start being developed today, what would they look like? Would they look like impenetrable <mark class="md-mark"><strong>black boxes</strong></mark> with <em>arbitrary constraints</em> set forth by each individual user agent? Or would they be <mark class="md-mark">modular</mark>, extensible, easy to integrate into your designs <strong>without obscure hacks</strong>, and as flexible as any userland component that&#x2019;s developed on top of them? If your answer is anything different than <em>&#x201C;exactly how they are today&#x201D;</em>, why on earth are we not doing anything to change them? They&#x2019;re still the most ubiquitous form of user interaction on the web <em>(besides links)</em>, and we&#x2019;ve been resting on our laurels for far too long.</p> <p>I&#x2019;ve always found standards teams to be of a similar nature, but I&#x2019;ll admit that&#x2019;s mostly because of my ignorance. I have little idea about how they operate, how a proposal moves through the ranks, how much <em>effective &#x201C;power&#x201D;</em> an average developer&#x2019;s voice has <em>(from what I hear, it&#x2019;s mostly browser vendors that get a say)</em>, and how the effort to implement certain features across browsers is coordinated.</p> <p>That being said, <strong>I&#x2019;d love for more people to get involved in the standards process</strong>, asking for these things everyone seems to be taking for granted even though we&#x2019;ve <em>been developing hacks around them for years</em>.</p> <p>I&#x2019;ll leave you with a video you might want to see. It&#x2019;s <a href="https://vimeo.com/134279371" target="_blank" aria-label="Christian Heilmann &#x2013; Advancing the web without breaking it? &#x2013; Beyond Tellerrand D&#xFC;sseldorf 2015">Chris Heilmann talking</a> about: <mark class="md-mark"><strong>&#x201C;Advancing the Web Without Breaking it&#x201D;</strong></mark>.</p> <p><a href="https://vimeo.com/134279371" target="_blank" aria-label="Christian Heilmann &#x2013; Advancing the web without breaking it? &#x2013; Beyond Tellerrand D&#xFC;sseldorf 2015"><img alt="Christian Heilmann talking about these issues" class="" src="https://i.imgur.com/xk3gppe.jpg"></a></p></div>
