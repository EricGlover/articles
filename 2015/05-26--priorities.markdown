<h1>Priorities</h1>

<blockquote><p>Peter-Paul Koch <a href="https://twitter.com/ppk" target="_blank">(@ppk)</a> recently wrote <a href="http://www.quirksmode.org/blog/archives/2015/05/tools_dont_solv.html" target="_blank">an article</a> that generated noticeable turmoil. One of the best responses was Jeremy Keith <a href="https://twitter.com/adactio" target="_blank">(@adactio)</a>&apos;s article, <a href="https://adactio.com/journal/8956" target="_blank">&#x2026;</a></p></blockquote>

<div><kbd>performance</kbd> <kbd>rant</kbd> <kbd>perfschool</kbd></div>

<div><p>Peter-Paul Koch <a href="https://twitter.com/ppk" target="_blank">(@ppk)</a> recently wrote <a href="http://www.quirksmode.org/blog/archives/2015/05/tools_dont_solv.html" target="_blank">an article</a> that generated noticeable turmoil. One of the best responses was Jeremy Keith <a href="https://twitter.com/adactio" target="_blank">(@adactio)</a>&apos;s article, <a href="https://adactio.com/journal/8956" target="_blank">&#x201C;Instantiation&#x201D;</a>, where he graced us with a flurry of responses from different bloggers, as well as a timeline and his analysis of the situation as a whole.</p></div>

<div></div>

<div><p>Earlier today, <a href="https://twitter.com/ppk" target="_blank">@ppk</a> published <a href="http://www.quirksmode.org/blog/archives/2015/05/web_vs_native_l.html" target="_blank">a follow-up post</a>, where he mentioned Tim Kadlec <a href="https://twitter.com/tkadlec" target="_blank">(@tkadlec)</a>&apos;s article on <a href="http://timkadlec.com/2015/05/choosing-performance/" target="_blank">&#x201C;Choosing Performance&#x201D;</a>. Tim rightly asserts that the web is not inherently slow, and that if a site is slow it&#x2019;s merely due to the fact that performance wasn&#x2019;t prioritized by the site&#x2019;s maintainers. Similarly, Jeremy posited that services such as <a href="https://www.instapaper.com/" target="_blank">Instapaper</a> or <a href="https://getpocket.com/" target="_blank">Pocket</a> shouldn&#x2019;t have a reason to exist. Besides being well-designed products that many of us use and love, <em>that shouldn&#x2019;t be the case</em>, websites should offer that degree of usability, and accessibility on their own, Jeremy argues.</p> <p><a href="https://www.flickr.com/photos/merlin/sets/72157622077100537/" target="_blank"><img src="https://i.imgur.com/1m1L4B5.jpg" alt="content.png"></a></p> <p>What if we were to <strong>focus just on the content</strong>? Are any prominent &#x201C;apps&#x201D; as ad-dollar hungry as the screenshot above?</p> <p>Everyone seems to agree that <strong>the crux of the issue stems from media deals and dollar-hungry marketers who have little interest in much else than profits</strong>. I tend to agree with that view. Most consumer-facing media rely directly on ad revenue, have little to no regard for their typical user when it comes to the effects these ads have on their experience <em>(hey, we call them &#x201C;users&#x201D; for a reason, right?)</em>, and simply keep on piling on advertisement.</p> <blockquote> <p><em>Sure. There&#x2019;s definitely <a href="https://www.flickr.com/photos/merlin/sets/72157622077100537/" target="_blank">some excellent original work</a> in there &#x2014; in the middle of all those ads and self-links and chrome and value-added &#x201C;journalism.&#x201D;</em></p> </blockquote> <p>I don&#x2019;t see this trend being anywhere close to slowing down, <strong>quite the contrary</strong>. Video advertising is becoming more and more prominent, huge unoptimized hero images and annoying interstitial dialogs that want you to download a mobile app that&#x2019;s supposed to do what the site you&#x2019;re already on should be doing, along with <a href="http://www.cookielaw.org/the-cookie-law/" target="_blank">ridiculous laws</a>, are all becoming lingua franca in web publishing.</p> <p>All of this wouldn&#x2019;t affect us as web workers if it weren&#x2019;t for the fact that <em>all the extra cruft is being blamed on the web platform</em> itself, as <a href="https://twitter.com/ppk" target="_blank">@ppk</a> and <a href="https://twitter.com/tkadlec" target="_blank">@tkadlec</a> point out. It&#x2019;s not even just the bloat, but we also keep on <a href="https://ponyfoo.com/articles/stop-breaking-the-web">breaking the web</a> by trying to mimic mobile applications, in <a href="http://demo.paper-leaf.com/alton/standard/" target="_blank">one of those desperate attempts</a> to become successful by imitating aspects of a business <em>(e.g <a href="http://www.wired.com/2013/08/innovate-or-die-why-googles-8020-rule-is-a-red-herring/" target="_blank">Google&#x2019;s 80-20 rule</a>)</em> that have very little to do with their actual success. Scrolljacking, irritating banners that only frustrate the hell out of users who don&#x2019;t want to install your app for no good reason, and similar tactics to drive mobile app usage have done nothing but hurt.</p> <p>It&#x2019;s time for the web to step up.</p></div>

<div><p><a href="https://www.flickr.com/photos/merlin/sets/72157622077100537/" target="_blank" aria-label="Noise-to-Noise Ratio - flickr.com"><img alt="allthingsdigital.png" class="" src="https://i.imgur.com/XgUVDQo.jpg"></a></p> <p>There&#x2019;s always been a long-standing fallacy that sites must look the same on every browser. Maybe that&#x2019;s the reason why it took us so very long to adopt responsive web design. It may be here, at <strong>the intersection between design/UX and performance</strong>, that we may find our answers. After all, if you look to the corners of the web that actually care about both parties, their web experiences are largely as enjoyable as their mobile counterparts. See <a href="https://ponyfoo.com/%22Twitter.com%22">Twitter</a> or <a href="http://www.theguardian.com/" target="_blank" aria-label="theguardian.com">The Guardian</a> for reference.</p> <p>Everything is relative. It&#x2019;s all about context. It&#x2019;s all about priorities. In the world of development, it&#x2019;s all about productivity. We seem to be perfectly okay with disregarding performance in favor of productivity. On the surface, this is reasonable, nobody in their right mind would choose Assembler over JavaScript because of performance, right? Well, yes. But we also have to draw a line at some point. If <em>slow sites take 8 seconds to load</em>, and Facebook can bring that down to &#x201C;zero&#x201D; by prefetching and whatnot, that&#x2019;s great, from Facebook&#x2019;s business point of view.</p> <p><a href="http://instantarticles.fb.com/" target="_blank" aria-label="Facebook &apos;Instant&apos; Articles"><img alt="facebookinstant.png" class="" src="https://i.imgur.com/GdeYiIe.png"></a></p> <p><sub>Not even a minute for the landing page of a marketing microsite, not bad! (I&#x2019;m on a hotel&#x2019;s wi-fi in Australia, but that shouldn&#x2019;t be a huge deal, right?)</sub></p> <p>Except no reasonable site should ever take 8 seconds to get to their content. I&#x2019;ve recently gave a talk on the performance optimization subject at <a href="http://v.campjs.com/#high-performance" target="_blank" aria-label="CampJS V">CampJS</a>, and <a href="https://speakerdeck.com/bevacqua/high-performance-in-the-critical-path" target="_blank" aria-label="High Performance in the Critical Path">here&#x2019;s my talk slides</a>. I&#x2019;ve also compiled the talk down into <a href="https://github.com/bevacqua/perfschool" target="_blank" aria-label="bevacqua/perfschool on GitHub">a self-guided workshop called <code class="md-code md-code-inline">perfschool</code></a>, with <em>ten different exercises</em>, that I encourage you to try and walk through from the comfort of your home. If you still think you can&#x2019;t get your site to be drastically faster, I encourage you to check out the content churned by all of the authors I&#x2019;ve mentioned above, since they care about performance quite a bit and they always produce quality articles that result in <strong>actionable performance gains</strong>. <a href="https://twitter.com/scottjehl" target="_blank" aria-label="Scott Jehl on Twitter">@scottjehl</a>, <a href="https://twitter.com/paul_irish" target="_blank" aria-label="Paul Irish on Twitter">@paul_irish</a>, <a href="https://twitter.com/addyosmani" target="_blank" aria-label="Addy Osmani on Twitter">@addyosmani</a>, and <a href="https://twitter.com/igrigorik" target="_blank" aria-label="Ilya Grigorik on Twitter">@igrigorik</a> are also some other people to track in terms of better understanding performance, and also have a solid grasp on user experience and design.</p> <p>There&#x2019;s dozens of web specification drafts being worked on, and the fact that the web is the largest available runtime doesn&#x2019;t quite make it a piece of cake to quickly churn out updates &#x2013; the rate at which innovation on the web is occurring, regardless, is nothing short of astonishing.</p> <p>Changing the public&#x2019;s perception on the web being inherently slow is going to be a long and winding road. Most of the way, though, it&#x2019;s going to be about not comparing the web to mobile anymore. It&#x2019;s not like Facebook Instant Articles or mobile apps do anything fundamentally different than relying heavily on the web to operate. The same web we&#x2019;ve already wrote off as &#x201C;too slow to be in the picture&#x201D;.</p> <p>The best ways of improving the situation, as well eventually come to see, are to <a href="https://ponyfoo.com/articles/server-first-apps" aria-label="Server-First Apps on Pony Foo">go back to the server</a>, adjust <a href="https://ponyfoo.com/articles/adjusting-ux-for-humans" aria-label="Adjusting UX for humans on Pony Foo">UX for humans</a>, <a href="https://ponyfoo.com/articles/measure-optimize-automate" aria-label="Measure, Optimize, Automate on Pony Foo">measuring performance</a>, <a href="https://ponyfoo.com/articles/critical-path-performance-optimization" aria-label="Critical Path Performance Optimization on Pony Foo">optimizing the critical rendering path</a>, following <a href="https://github.com/bevacqua/js" target="_blank" aria-label="bevacqua/js JavaScript Quality Guide on GitHub">style guides</a>, and writing all the modules.</p> <p>Content is king. Defer the rest, and <a href="https://ponyfoo.com/articles/stop-breaking-the-web" aria-label="Stop Breaking the Web on Pony Foo">stop breaking the web</a>.</p></div>
