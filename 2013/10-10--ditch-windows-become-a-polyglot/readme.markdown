<sub>&#x1F6A8; <strong>Autogenerated!</strong> See <a href="https://github.com/ponyfoo/articles/tree/noindex/contributing.markdown"><code>contributing.markdown</code></a> for details. See also: <a href="https://ponyfoo.com/articles/ditch-windows-become-a-polyglot">web version</a>.</sub>

<a href="https://ponyfoo.com/articles/ditch-windows-become-a-polyglot"><div><img src="https://i.imgur.com/VeZWHkE.jpg" alt="Ditch Windows, Become a Polyglot"></div></a>

<h1>Ditch Windows, Become a Polyglot</h1>

<p><kbd>windows</kbd> <kbd>ubuntu</kbd> <kbd>os</kbd> <kbd>terminal</kbd> <kbd>polyglot</kbd> <kbd>bio</kbd></p>

<blockquote><p>It took me a while to realize it, but Windows has been a <em>disease</em> to me, or perhaps more analogously a <em>drug addiction</em>. Ever since I was a kid I used Windows. Well, I &#x2026;</p></blockquote>

<div><p>It took me a while to realize it, but Windows has been a <em>disease</em> to me, or perhaps more analogously a <em>drug addiction</em>. Ever since I was a kid I used Windows. Well, I guess I played around in Norton Commander, which was <em>nice at the time</em>, as a way to easily navigate the file system in a terminal window, or <a href="http://en.wikipedia.org/wiki/DOS" target="_blank" rel="noopener noreferrer">DOS</a>.</p></div>

<blockquote></blockquote>

<div><figure class="figure-has-loaded"><img src="https://i.imgur.com/PhsIS0G.png" alt="nc.png" title="The grandiose Norton Commander"></figure> <p>Early on, like most self-taught developers, I met Pascal, a language designed to teach, and I was stoked. Soon enough I was browsing the web, learning about Java applets, which were crucial to placing those prized visitor counters, tic-tac-toe challenges, and enough calculators for your website.</p> <p>Hosting was fun, we had FTP, <a href="http://en.wikipedia.org/wiki/GeoCities" target="_blank" rel="noopener noreferrer">GeoCities</a>, <a href="http://en.wikipedia.org/wiki/Angelfire" target="_blank" rel="noopener noreferrer">Angelfire</a>, and many other <em>words-that-don&#x2019;t-make-any-sense-next-to-each-other</em> services. Oh, life was so simple back then. A few <code class="md-code md-code-inline">marquee</code> and <code class="md-code md-code-inline">blink</code> tags was all we needed to promote our sites. There was no need for CSS, that&#x2019;s why it didn&#x2019;t exist. A few <code class="md-code md-code-inline">&lt;center&gt;</code> tags here, a few thousand <code class="md-code md-code-inline">&lt;table&gt;</code> elements there and we had a perfectly fine website <em>and nobody complained about it</em>.</p></div>

<div><figure><img alt="angelfire.png" title="Precious, free hosting! Where do I sign?" class="" src="https://i.imgur.com/6ApllqK.png"></figure> <p>In retrospect, no one visited it either, being completely honest to ourselves. Eventually my understanding of the web evolved, and I started reading about PHP on my spare time. You mean I can let people <em>(well, just myself again, really)</em> <strong>log in to my site</strong>?? Just like the big names? Whoa. And so we learned PHP, until one day I became tired of that nonsense, and I decided I was going to write games. Turned out designing games in VB6 wasn&#x2019;t very reasonable either, and <code class="md-code md-code-inline">On Error Resume Next</code> didn&#x2019;t seem to be helping me out a lot. I managed, anyways. I read about game development, followed tutorias, and soon enough I was setting up my first game loop, complete with a menu screen and a 2D tilemap, as well as a few frames worth of characters. I clearly didn&#x2019;t have what it took to design these graphics, though, but sketching them in paint <em>seemed to suffice</em>, at that time.</p> <blockquote> <p>Looking back, I <em>immensely regret not being more careful about backing up my code as a child</em>, I would have all this awesome code that never saw the light of day. Only had I learnt about version control sooner, but that was the price of the few kids around who loved to spend his time typing things into a keyboard.</p> </blockquote> <h3 id="windows-windows-windows">Windows, windows, windows</h3> <p>I never really paid any attention to <em>Linux</em> as a kid, and I definitely couldn&#x2019;t afford a Mac at the time. I had heard about LInux, but I was under the impression that the terminal was all there was to Linux. I didn&#x2019;t want to go back to a DOS-like interface, <strong>DOS sucked</strong>. So I was stuck with Windows, and programming in PHP, I didn&#x2019;t know any better.</p> <figure><img alt="cat-stuck-in-window.jpg" title="Halp!" class="" src="https://i.imgur.com/HJsAINu.jpg"></figure> <p>Later on, I became friends with the owners of a game I played on a daily basis (the game server was a fork of an open source project called <a href="http://www.runuo.com/" target="_blank" rel="noopener noreferrer" aria-label="RunUO Ultima Online Emulator">RunUO</a>). Almost as a matter of fate, they explained that they had a falling out with the programmer they had, and asked if I could take a look at one of their scripts, because they had been meaning to put together a quest, but they had no idea what they were doing. I didn&#x2019;t even know about <strong>C#</strong>, but I gave it a shot. Over time, I ended up becoming a contributor to the project, and at one point, I even learned that people could, <em>you know&#x2026;</em>, <strong>get paid</strong> for coding in <strong><em>C#</em></strong>.</p> <p>I started working with the language I dearly loved, and I couldn&#x2019;t have been happier. I worked with <strong>C#</strong> for years, and I had spent a few years on my own working on the RunUO project. As I worked, I moved closer and closer to the web I loved so much when I was younger, but this time I came prepared, it wasn&#x2019;t merely <a href="http://en.wikipedia.org/wiki/Microsoft_FrontPage" target="_blank" rel="noopener noreferrer" aria-label="Microsoft FrontPage on Wikipedia">FrontPage</a> anymore, <strong>C#</strong> was the real deal!</p> <p>Still, the command-line was a complete stranger to me. <code class="md-code md-code-inline">cmd</code>, which comes bundled with Windows, is <strong>absolutely god-awfully useless</strong> if you want to get anything done solely typing into it. When I actually had to start using a terminal (not by choice, but simply because there weren&#x2019;t any good graphical <code class="md-code md-code-inline">git</code> interfaces), I started out with <code class="md-code md-code-inline">bash</code>, and used that for a while before moving to <a href="http://en.wikipedia.org/wiki/Windows_PowerShell" target="_blank" rel="noopener noreferrer" aria-label="Windows PowerShell on Wikipedia">PowerShell</a>. I was so repelled by the command-line, that I thoroughly enjoyed moving my mouse around, right clicking on things, and picking options out of a menu.</p> <p><strong>C#</strong> <em>taught me a lot</em> about architecture, and application design in general. However, as the architecture fanatic I ended up becoming, <em>my heart was always with the web</em>. I started moving towards the front-end, and preoccupying myself with the web matters again. Little did <strong>C#</strong> do for me to become an avid terminal user, but that was about to change.</p> <h3 id="a-new-order">A New Order</h3> <p>Around a year ago, I bought a variety of books (<a href="https://ponyfoo.com/2013/05/21/recommended-reading" aria-label="Recommended Reading">reviewed in this article</a>) on UX, architecture, and best practices, <a href="http://www.amazon.com/dp/020161622X" target="_blank" rel="noopener noreferrer" aria-label="The Pragmatic Programmer">one of those books</a> <em>completely changed me</em> as a developer. Among other valuable insights, the authors prompted me to get out of my comfort zone, and learn a new language. I picked <strong>Node.js</strong>, even though I had no idea what it was, i sure <em>sounded</em> interesting. I decided to start working on something with it right away, and this blog <a href="https://ponyfoo.com/2012/12/25/pony-foo-begins" aria-label="Pony Foo Begins">became my pet project</a>.</p> <p>Learning Node has been a wonderful experience for me and it has now become <em>part of my daily work</em>, much like C# did before. A tremendous difference, however, is that Node isn&#x2019;t <em>biased towards Windows</em> at all, which forced me to actually learn what happens under the covers when you compare it against the abstractions C# does for us. These abstractions, even though powerful, end up obscuring fundamental aspects of our programs, and hindering the sustained learning of those of us with a thirst for knowledge.</p> <blockquote> <p>When I first started working with Node, still the Windows-infected user that I was, I dreaded the idea of typing into the command-line. I already was a PowerShell <em>(PS)</em> user by then, but using it for dealing with <code class="md-code md-code-inline">git</code> was enough, <em>thank you</em>. Setting up PS is unfortunately pretty much as good as it gets on Windows, and yet a complete nightmare for any Windows user, completely unaware of what the command-line even is. Why do I have to type <code class="md-code md-code-inline">node app</code> into my command-line?</p> </blockquote> <p>As time went by, and I started using more and more <code class="md-code md-code-inline">npm</code> modules written by complete strangers, the open-source community started becoming a whole different level of appealing to me, I <em>needed</em> to get involved. Yet, a lot of the packages I was trying to use weren&#x2019;t careful enough to conform with Windows&#x2019; upside-down OS design, and I started becoming disenchanted about Windows, even though I had recently acquired an <em>early RTM version</em> of Windows 8, and loving it, if only that stupid command-line behaved&#x2026;</p> <p>Then I got a job working on Node, even though all I had to show for was this blog, and my hand was forced. I just had to pick up my old, <em>2008 era</em> <strong>MacBook Pro</strong> and work there, rather than my PC. The reason was, <em>simply enough</em>, I just couldn&#x2019;t get the application to work on Windows. I moved on, and soon afterwards it start becoming apparent what I had been missing. I started using the terminal more heavily than I had ever done on Windows, and I was loving the idea of being able to do anything, without <em>having to download yet another program for it</em> (that&#x2019;s the important part, all of this came bundled with it, I didn&#x2019;t have to download a thing, it was just another part of the OS). Before I even realized it, I was <code class="md-code md-code-inline">curl</code>ing, <code class="md-code md-code-inline">grep</code>ing, <code class="md-code md-code-inline">sed</code>ing, and piping my way around the command line greatly improving my productivity. I thoroughly enjoyed installing packages right from the command-line with <code class="md-code md-code-inline">npm</code>, as opposed to having to click through things with <code class="md-code md-code-inline">NuGet</code> in the case of <strong>C#</strong>, dealing with <em>unreasonably case-sensitive</em> commands in PS, and barely even knowing about alternatives to compile than pressing <kbd>F6</kbd> on the <strong>Visual Studio IDE</strong>.</p> <blockquote> <p>The difference <em>between Windows and everyone else</em>, is that you won&#x2019;t really learn much about development, <em>other than what Microsoft imposes on you</em>, and even if you had that craving of learning just about anything, you wouldn&#x2019;t be aware about this constraint. I <em>sure as hell wasn&#x2019;t</em>.</p> </blockquote> <p>I&#x2019;m not saying that I&#x2019;ve learnt it all, <em><strong>extremely</strong> far from it</em>, but ditching Windows <em>opened my eyes</em> to an endless world of possibilities I didn&#x2019;t even know existed before. Besides, being able to pass environment variables to processes like <code class="md-code md-code-inline">PORT=3000 node app</code> in your terminal is too good to pass up.</p> <p>A couple of days ago, I decided to install <a href="http://www.ubuntu.com/" target="_blank" rel="noopener noreferrer" aria-label="Ubuntu Linux">Ubuntu</a> on my PC. One of the first things I did was create a file where I&#x2019;d place all the steps taken to set up my environment, and eventually I created <a href="https://github.com/bevacqua/dotfiles" target="_blank" rel="noopener noreferrer" aria-label="My dotfiles on GitHub">a repository on GitHub</a> so i wouldn&#x2019;t have to repeat myself when installing Ubuntu again. This has never been a_ feasible option_ for Windows, at least not for me.</p> <p>It <em>might&#x2019;ve taken me 25 years</em>, but <strong>you can be damn sure the change was worth it</strong>.</p></div>
