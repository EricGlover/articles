<sub>&#x1F6A8; <strong>Autogenerated!</strong> See <a href="https://github.com/ponyfoo/articles/tree/noindex/contributing.markdown"><code>contributing.markdown</code></a> for details. See also: <a href="https://ponyfoo.com/articles/9-quick-tips-about-npm">web version</a>.</sub>

<a href="https://ponyfoo.com/articles/9-quick-tips-about-npm"><div></div></a>

<h1>9 Quick Tips About npm</h1>

<p><kbd>npm</kbd> <kbd>tips</kbd> <kbd>browserify</kbd></p>

<blockquote><p><strong>23-12-13 Update: Now with an extra bonus tip</strong></p><p>Inspired by the now-outdated post <a href="http://blog.izs.me/post/1675072029/10-cool-things-you-probably-didnt-realize-npm-could-do" target="_blank">10 Cool Things You Probably Didn&#x2019;t Realize npm Could Do</a> from Isaacs, the creator of <a href="https://npmjs.org/" target="_blank"><code>&#x2026;</code></a></p></blockquote>

<div><p><strong>23-12-13 Update: Now with an extra bonus tip</strong></p></div>

<blockquote></blockquote>

<div><p>Inspired by the now-outdated post <a href="http://blog.izs.me/post/1675072029/10-cool-things-you-probably-didnt-realize-npm-could-do" target="_blank">10 Cool Things You Probably Didn&#x2019;t Realize npm Could Do</a> from Isaacs, the creator of <a href="https://npmjs.org/" target="_blank"><code class="md-code md-code-inline">npm</code></a>, I set out to give you a few more tips on how to take advantage of this ridiculously well executed package manager.</p> <figure><img src="https://i.imgur.com/DtHsMG5.png" alt="npm.png"><figcaption>npm.png</figcaption></figure></div>

<div><h2 id="manage-node-and-npm-versions-easily">Manage <code class="md-code md-code-inline">node</code> and <code class="md-code md-code-inline">npm</code> versions easily</h2> <p>Using <a href="https://github.com/creationix/nvm" target="_blank" aria-label="creationix/nvm on GitHub"><code class="md-code md-code-inline">nvm</code></a>, you won&#x2019;t ever have any versioning or sudo issues with <code class="md-code md-code-inline">npm</code> again. I can&#x2019;t recommend this highly enough!</p> <pre class="md-code-block"><code class="md-code md-lang-bash">curl https://raw.github.com/creationix/nvm/master/install.sh | sh
</code></pre> <p>Reload your terminal, and then start by installing some other version.</p> <pre class="md-code-block"><code class="md-code md-lang-bash">nvm install <span class="md-code-number">0.10</span>.<span class="md-code-number">22</span>
nvm <span class="md-code-built_in">alias</span> default <span class="md-code-number">0.10</span>.<span class="md-code-number">22</span>
</code></pre> <p>Switching to another version is also really easy, and you can copy modules over when you upgrade, with <code class="md-code md-code-inline">nvm copy-packages &lt;previous-version&gt;</code>.</p> <h2 id="use-modules-directly-from-the-source">Use modules directly from the source</h2> <p>Rather than installing a package every time it gets updated, you can use the <a href="https://npmjs.org/doc/cli/npm-link.html" target="_blank" aria-label="npm link documentation"><code class="md-code md-code-inline">npm link</code></a> command. This command will create a symbolic link which you can later consume with <code class="md-code md-code-inline">npm link &lt;pkg&gt;</code>.</p> <p>As an example, have the following illustrative shell session.</p> <pre class="md-code-block"><code class="md-code md-lang-bash">git <span class="md-code-built_in">clone</span> https://github.com/bevacqua/grunt-ec2.git
<span class="md-code-built_in">cd</span> grunt-ec2
npm link
<span class="md-code-built_in">cd</span> ../site
npm link grunt-ec2
grunt ec2_deploy:production
</code></pre> <p>If you make any changes to <code class="md-code md-code-inline">grunt-ec2</code> in your local version, they will have an immediate effect on the package installed in <code class="md-code md-code-inline">site</code>, as well. This one is also very useful if you&#x2019;re a package author, as you can quickly test your package in a real usage scenario without having to publish it to <code class="md-code md-code-inline">npm</code> first.</p> <h2 id="npm-init-in-style"><code class="md-code md-code-inline">npm init</code> in style</h2> <p>This one is rather straightforward. You can set some values in <code class="md-code md-code-inline">npm</code>&apos;s configuration, and then using <code class="md-code md-code-inline">npm init</code> will use them when creating a <code class="md-code md-code-inline">package.json</code> file.</p> <pre class="md-code-block"><code class="md-code md-lang-bash"><span class="md-code-comment"># add author info to npm</span>
npm <span class="md-code-built_in">set</span> init.author.name <span class="md-code-string">&quot;<span class="md-code-variable">$NAME</span>&quot;</span>
npm <span class="md-code-built_in">set</span> init.author.email <span class="md-code-string">&quot;<span class="md-code-variable">$EMAIL</span>&quot;</span>
npm <span class="md-code-built_in">set</span> init.author.url <span class="md-code-string">&quot;<span class="md-code-variable">$SITE</span>&quot;</span>
npm init
</code></pre> <h2 id="update-any-package-to-latest-version">Update any package to latest version</h2> <p>Firstly, you can get the <em>currently installed version</em> of a package by executing:</p> <pre class="md-code-block"><code class="md-code md-lang-javascript">npm view &lt;pkg&gt; version
</code></pre> <p>If you set the version of a few modules in <code class="md-code md-code-inline">package.json</code> to <code class="md-code md-code-inline">*</code>, then running <code class="md-code md-code-inline">npm update --save</code> will update all those modules to the latest stable version, and since we&#x2019;ve used the <code class="md-code md-code-inline">--save</code> flag, the version numbers will get persisted <em>(overwriting the stars)</em>. This is most useful in recently started projects, but should be treated carefully in solutions which are already in production, as authors might break between updates.</p> <h2 id="clean-the-npm-cache">Clean the <code class="md-code md-code-inline">npm</code> cache</h2> <p>If you&#x2019;re having any issues with an <code class="md-code md-code-inline">npm</code> package, you might have to remove it from the <code class="md-code md-code-inline">npm</code> cache before attempting to install it again.</p> <pre class="md-code-block"><code class="md-code md-lang-bash">npm clean &lt;pkg&gt;
npm install &lt;pkg&gt;
</code></pre> <h2 id="publish-npm-modules-faster">Publish <code class="md-code md-code-inline">npm</code> modules faster!</h2> <p>You can do that using an <a href="https://github.com/dominictarr/npm-atomic-publish" target="_blank" aria-label="npm-atomic-publish on GitHub">optimized npm publish</a> created by <a href="https://github.com/dominictarr" target="_blank" aria-label="dominictarr on GitHub">dominictarr</a>.</p> <pre class="md-code-block"><code class="md-code">npm i -g npm-atomic-publish
npm-atomic-publish
</code></pre> <h2 id="save-time-use-shortcuts">Save time, use shortcuts</h2> <ul> <li>Rather than <code class="md-code md-code-inline">npm install</code>, use <code class="md-code md-code-inline">npm i</code>.</li> <li><code class="md-code md-code-inline">npm uninstall</code> becomes <code class="md-code md-code-inline">npm r</code></li> <li>Save packages directly in one step with <code class="md-code md-code-inline">npm i --save &lt;pkg&gt;</code></li> <li>For <code class="md-code md-code-inline">devDependencies</code>, do <code class="md-code md-code-inline">npm i --save-dev &lt;pkg&gt;</code></li> </ul> <h2 id="bump-package-version-with-npm">Bump package version with <code class="md-code md-code-inline">npm</code>!</h2> <p>Just do <code class="md-code md-code-inline">npm version &lt;v&gt;</code>! It&#x2019;ll even commit and tag for you, if you&#x2019;re in the context of a <code class="md-code md-code-inline">git</code> repository.</p> <pre class="md-code-block"><code class="md-code md-lang-bash">npm version <span class="md-code-number">2.1</span>.<span class="md-code-number">0</span>
npm publish
</code></pre> <h2 id="use-browserify-to-get-commonjs-in-browser-land">Use Browserify to get Common.JS in browser-land!</h2> <p>If you want to access 50+ thousand packages <em>(and rapidly growing!)</em> in your browser, and you&#x2019;re starting to get tired of the AMD module definition, you might want to give <a href="https://github.com/substack/node-browserify" target="_blank" aria-label="browserify on GitHub">Browserify</a> a spin. You&#x2019;ll be able to use the CJS notation in the browser, and you&#x2019;re even able to port modules that used the file system, thanks to some <a href="https://github.com/substack/node-browserify#compatibility" target="_blank" aria-label="Browserify compatibility">creative shimmery by substack</a>.</p> <p>And, of course, there&#x2019;s <a href="https://github.com/jmreidy/grunt-browserify" target="_blank" aria-label="grunt-browserify on GitHub">a Grunt plugin</a> for that!</p> <h2 id="read-all-the-way-to-the-end-have-something-extra">Read all the way to the end? Have something extra!</h2> <ul> <li><a href="http://blog.nodejs.org/2012/02/27/managing-node-js-dependencies-with-shrinkwrap/" target="_blank" aria-label="Managing Node.js Dependencies with Shrinkwrap">Managing Node.js Dependencies with Shrinkwrap</a></li> <li>Use <code class="md-code md-code-inline">--prefix &lt;dir&gt;</code> to install packages in a given directory, rather than working directory</li> <li>Don&#x2019;t uppercase, <code class="md-code md-code-inline">npm</code> is really <code class="md-code md-code-inline">npm</code>, not <code class="md-code md-code-inline">NPM</code>, not <code class="md-code md-code-inline">Npm</code>. Just <code class="md-code md-code-inline">npm</code>. That&#x2019;s it. <a href="https://npmjs.org/doc/faq.html" target="_blank" aria-label="npm documentation FAQ">Source</a>:</li> </ul> <blockquote> <p>Contrary to the belief of many, &#x201C;npm&#x201D; is not in fact an abbreviation for &#x201C;Node Package Manager&#x201D;. It is a recursive bacronymic abbreviation for &#x201C;npm is not an acronym&#x201D;. (If it was &#x201C;ninaa&#x201D;, then it would be an acronym, and thus incorrectly named.)</p> <p>&#x201C;NPM&#x201D;, however, is an acronym (more precisely, a capitonym) for the National Association of Pastoral Musicians. You can learn more about them at <a href="http://npm.org/" target="_blank">http://npm.org/</a>.</p> <p>In software, &#x201C;NPM&#x201D; is a Non-Parametric Mapping utility written by Chris Rorden. You can analyze pictures of brains with it. Learn more about the (capitalized) NPM program at <a href="http://www.cabiatl.com/mricro/npm/" target="_blank">http://www.cabiatl.com/mricro/npm/</a>.</p> <p>The first seed that eventually grew into this flower was a bash utility named &#x201C;pm&#x201D;, which was a shortened descendent of &#x201C;pkgmakeinst&#x201D;, a bash function that was used to install various different things on different platforms, most often using Yahoo&#x2019;s yinst. If npm was ever an acronym for anything, it was node pm or maybe new pm.</p> <p>So, in all seriousness, the &#x201C;npm&#x201D; project is named after its command-line utility, which was organically selected to be easily typed by a right-handed programmer using a US QWERTY keyboard layout, ending with the right-ring-finger in a postition to type the - key for flags and other command-line arguments. That command-line utility is always lower-case, though it starts most sentences it is a part of.</p> </blockquote> <p>A package is:</p> <ol> <li>a folder containing a program described by a <code class="md-code md-code-inline">package.json</code> file</li> <li>a gzipped tarball containing <strong>[1]</strong></li> <li>a url that resolves to <strong>[2]</strong></li> <li>a <code class="md-code md-code-inline">&lt;name&gt;@&lt;version&gt;</code> that is published on the registry with <strong>[3]</strong></li> <li>a <code class="md-code md-code-inline">&lt;name&gt;@&lt;tag&gt;</code> that points to <strong>[4]</strong></li> <li>a <code class="md-code md-code-inline">&lt;name&gt;</code> that has a &#x201C;latest&#x201D; tag satisfying <strong>[5]</strong></li> <li>a git url that, when cloned, results in <strong>[1]</strong>.</li> </ol> <p>So there you have it!</p> <blockquote> <p>What are your favorite <code class="md-code md-code-inline">npm</code> tricks?</p> </blockquote> <h2 id="remove-development-dependencies">Remove development dependencies</h2> <p>Using the command below, you can remove <code class="md-code md-code-inline">devDependencies</code> after <code class="md-code md-code-inline">npm install</code>. This is useful in some set ups where you deploy to a CI environment, which installs everything so that it can run your Grunt build, or something, and then deploys to the live servers.</p> <pre class="md-code-block"><code class="md-code md-lang-bash">npm prune --production
</code></pre> <p>Woo, that&#x2019;s ten!</p></div>
