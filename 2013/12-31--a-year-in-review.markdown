<div><blockquote>
  <h1>A Year In Review</h1>
  <div><p>It&#x2019;s been almost a year since <a href="https://ponyfoo.com/2012/12/25/pony-foo-begins">I launched this blog</a>, although I had started writing blog posts before I finished coding the web application, as a way to &#x2026;</p></div>
</blockquote></div>

<div><p>It&#x2019;s been almost a year since <a href="https://ponyfoo.com/2012/12/25/pony-foo-begins">I launched this blog</a>, although I had started writing blog posts before I finished coding the web application, as a way to &#x201C;force me&#x201D; to finish coding it, instead of fooling around with meaningless &#x201C;features&#x201D;.</p></div>

<div></div>

<div><p>I spent <em>lots</em> of my spare time, learning Node.js and putting together the blogging engine, taking my C# knowledge, and putting it to use in JavaScript. JavaScript in the server, amazing stuff! More importantly, I learned a lot about Unix systems, and <a href="https://ponyfoo.com/2013/10/10/ditch-windows-become-a-polyglot">walked away from Windows-only programs</a> for good, at least when it comes to software development. Node taught me how to write cross-platform code which just works, and that has been a rewarding take away for me. I learned a lot simply because Node was doing less on my behalf.</p> <p>In this brief post I&#x2019;ll talk about some of my experiences throughout 2013.</p></div>

<div><p>Everything being open-source really helped my learning process, and I quickly learned best practices. Right off the bat I used Heroku as my hosting environment, and I found myself doing lots of the things proposed by <a href="http://12factor.net/" target="_blank" aria-label="The Twelve-Factor App">12factor</a>, before discovering that document.</p> <h2 id="asset-management-and-assetify">Asset management, and <code class="md-code md-code-inline">assetify</code></h2> <p>Soon afterwards I made my first contribution to open-source, in <a href="https://github.com/bevacqua/node-assetify" target="_blank" aria-label="Node asset management simplified">assetify</a>, an asset manager that packages up bundling, minification, and cache busting in a piece of middleware. At the time I didn&#x2019;t yet have the love I&#x2019;ve been garnering as of late for applications that strive to be as static as possible, and assetify was <a href="https://ponyfoo.com/2013/01/18/asset-management-in-node" aria-label="Asset Management in Node"><em>kind of very tightly coupled</em></a>.</p> <p>A few weeks later, I <a href="https://ponyfoo.com/2013/03/22/managing-code-quality-in-nodejs" aria-label="Managing Code Quality in NodeJS">came across Grunt</a>, and wrote <a href="https://github.com/bevacqua/grunt-assetify" target="_blank" aria-label="Compile your assetify static assets before even launching your application, it boasted">a plugin to match assetify</a>, so that the build step could be automated. I kind of fell in love with Grunt, and I started using it for everything, writing lots of little plugins to use with it.</p> <p>Later on, I would split the functionality in half, allowing consumers to run the build in a separate process from what was ultimately serving the assets. However, I wasn&#x2019;t really using assetify anymore, except for this blog, which I rarely worked on anymore.</p> <blockquote> <p>In retrospect, one of my biggest mistakes at this stage was attempting to use Grunt to not only build the application, but run it, too.</p> </blockquote> <h2 id="early-blogging-experience">Early Blogging Experience</h2> <p>At the beginning, I wrote blog posts about pretty much anything that came to my mind. To get things going, I figured I&#x2019;d start by talking about what I was working on in the blogging engine, my only real work using Node, at the time. As such, I wrote focused posts that explained some of the considerations I had to make while building the blog.</p> <p>I wrote an <a href="https://ponyfoo.com/2013/03/12/introduction-to-seo-and-content-indexing" aria-label="Introduction to SEO and Content Indexing">introduction to SEO and Content Indexing</a> in AJAX applications, which explained the steps I took to enable Google to crawl my site, while keeping the <del>awesome</del> <strong>extremely irritating</strong> AJAX functionality in place. I say <em>extremely irritating</em> because I made the mistake of not <a href="http://substack.net/shared_rendering_in_node_and_the_browser" target="_blank" aria-label="Shared rendering in node and the browser, by substack">rendering the content server-side</a> during the initial page load, which proved to be a huge hit to the usability of the blog, and <em>something I intend to correct at some point in 2014</em>.</p> <p>I also wrote small blog posts where I described what I had learned through usability books at the time, such as <a href="https://ponyfoo.com/2013/03/06/defensive-design" aria-label="Defensive Design">Defensive Design</a>, a book that can be summarized in designing consistent error messages and interfaces in general, and <a href="https://ponyfoo.com/2013/04/01/a-note-on-everyday-usability" aria-label="A Note on Everyday Usability">The Design of Everyday Things</a>. In retrospect, I think these blog posts could&#x2019;ve been a lot more detailed than they resulted.</p> <blockquote> <p>Next year, I&#x2019;ll make it a thing to give each article a few days before hitting the <kbd>Post</kbd> button.</p> </blockquote> <h2 id="my-own-mvc-framework">My Own MVC Framework</h2> <p>That being said, I was particularly happy with how the code looked like, I didn&#x2019;t use any libraries other than jQuery <em>(which I regret doing)</em>, but keep in mind that at that time I <em>hadn&#x2019;t even tried out Angular</em> yet. My favorite part was how I made it so that if a response came with a particular HTTP status code, my little framework knew what to do with that. It&#x2019;d prepare the pertinent validation message view, and place that in the context of where the request originated from.</p> <p><img alt="400.png" title="HTTP 400? That&apos;s an error!" class="" src="https://i.imgur.com/5aOGBKJ.png"></p> <p>If there wasn&#x2019;t a context, then the validation message would pop up in a dialog, <a href="https://github.com/bevacqua/ponyfoo/blob/master/src/hosts/blog/static/js/hooks/thin.validation.js" target="_blank" aria-label="Response validation in NBrut">amusing stuff</a>! Totally irrelevant in a blog, of course. Developing <a href="https://github.com/bevacqua/ponyfoo/tree/master/src/hosts/blog/static/js/nbrut" target="_blank" aria-label="The NBrut client-side MVC framework">my own MVC framework</a> was <em>thrilling</em>, nonetheless. Regrettably, I didn&#x2019;t write it in isolation, otherwise I would&#x2019;ve continued working on it, maybe when I rewrite the engine I&#x2019;ll put it to good use again. It had wonderful little things, you&#x2019;d code up views, bind them to routes, and request that a given view fetches some data from the server before getting rendered.</p> <p>Of course, the views were rendered using the <a href="https://github.com/janl/mustache.js" target="_blank" aria-label="Mustache.js on GitHub">Mustache</a> engine, but some things, like <a href="https://github.com/bevacqua/ponyfoo/blob/master/src/hosts/blog/static/js/nbrut/nbrut.thin.js" target="_blank" aria-label="The thin HTTP layer in NBrut">HTTP requests getting tracked</a>, because I wanted to write a caching layer in the client-side, as to fix the usability a bit without the need for server-side rendering, but never got to it. The <code class="md-code md-code-inline">thin</code> layer in <strong>NBrut</strong> did enable things like status code validation, and aborting requests when they weren&#x2019;t no longer necessary (for instance, when fetching an article and then promptly clicking on the header, getting back to the home page).</p> <p>Actually using the framework <a href="https://github.com/bevacqua/ponyfoo/blob/master/src/hosts/blog/static/js/views/user/profile.js" target="_blank" aria-label="Sample view in NBrut">wasn&#x2019;t as bad as you might think</a>, but the thorough lack of documentation makes it really hard to follow the code around, even for me, and I wrote the thing a few months ago.</p> <blockquote> <p>In the future, I&#x2019;ll abstain from tightly coupling major pieces of functionality together, and instead force myself to write reusable components which are well documented.</p> </blockquote> <h2 id="reading-reading-reading">Reading, Reading, Reading</h2> <p>Late in 2012 I bought a bunch of software related books, and I&#x2019;ve read a large number of them. Here are the ones I read. Can you spot the one that&#x2019;s not so much about software?</p> <ul> <li><a href="http://www.amazon.com/dp/0321683919" target="_blank" aria-label="Check it out on Amazon">Test-Driven JavaScript Development</a> <em>(ebook)</em></li> <li><a href="http://www.abookapart.com/products/responsive-web-design" target="_blank" aria-label="Check it out on AListApart">Responsive Web Design</a> <em>(ebook)</em></li> <li><a href="http://www.abookapart.com/products/mobile-first" target="_blank" aria-label="Check it out on AListApart">Mobile First</a> <em>(ebook)</em></li> <li><a href="http://www.amazon.com/dp/1449311652" target="_blank" aria-label="Check it out on Amazon">Lean UX</a> <em>(ebook)</em></li> <li><a href="http://www.amazon.com/dp/1449323391" target="_blank" aria-label="Check it out on Amazon">Testable JavaScript</a> <em>(ebook)</em></li> <li><a href="http://www.amazon.com/gp/product/0201657880" target="_blank" aria-label="Check it out on Amazon">Programming Pearls</a></li> <li><a href="http://www.amazon.com/gp/product/0201835959" target="_blank" aria-label="Check it out on Amazon">The Mythical Man Month</a></li> <li><a href="http://www.amazon.com/gp/product/0465067107" target="_blank" aria-label="Check it out on Amazon">The Design of Everyday Things</a></li> <li><a href="http://www.amazon.com/gp/product/020161622X" target="_blank" aria-label="Check it out on Amazon">The Pragmatic Programmer</a></li> <li><a href="http://www.amazon.com/gp/product/0393316041" target="_blank" aria-label="Check it out on Amazon">Surely You&#x2019;re Joking, Mr. Feynman</a></li> <li><a href="http://www.amazon.com/gp/product/073571410X" target="_blank" aria-label="Check it out on Amazon">Defensive Design in the Web</a></li> <li><a href="http://www.amazon.com/dp/0201485672" target="_blank" aria-label="Check it out on Amazon">Refactoring: Improving the Design of Existing Code</a></li> <li><a href="http://www.amazon.com/gp/product/0578012812" target="_blank" aria-label="Check it out on Amazon">Getting Real</a></li> <li><a href="http://www.amazon.com/gp/product/0932633439" target="_blank" aria-label="Check it out on Amazon">Peopleware</a></li> <li><a href="http://www.amazon.com/gp/product/0307887898" target="_blank" aria-label="Check it out on Amazon">The Lean Startup</a></li> <li><a href="http://www.amazon.com/gp/product/0932633021" target="_blank" aria-label="Check it out on Amazon">Becoming a Technical Leader</a></li> <li><a href="http://www.amazon.com/gp/product/0672326140" target="_blank" aria-label="Check it out on Amazon">The Inmates Are Running the Asylum</a></li> <li><a href="http://www.amazon.com/gp/product/0596517742" target="_blank" aria-label="Check it out on Amazon">JavaScript: The Good Parts</a> <em>(for the second, and <strong>third</strong> times)</em></li> <li><a href="http://www.amazon.com/gp/product/0321344758" target="_blank" aria-label="Check it out on Amazon">Don&#x2019;t Make me Think</a></li> <li><a href="http://www.amazon.com/gp/product/0596002890" target="_blank" aria-label="Check it out on Amazon">Mastering Regular Expressions</a> <em>(half of it, as it progresses in an excruciatingly slow fashion)</em></li> <li><a href="http://www.amazon.com/dp/0735619670" target="_blank" aria-label="Check it out on Amazon">Code Complete 2</a> <em>(about a third, reading it on the bus made my hands hurt, and I gave up)</em></li> </ul> <p>It&#x2019;s been really refreshing to read books in print form, as during 2012 I read <em>mostly ebooks</em>, but that wasn&#x2019;t such a great experience. I could&#x2019;ve gotten by without some of these. For example, <em>Getting Real</em> was mostly a summary of things I already knew, but it was so easy to read that it didn&#x2019;t really hurt that much, and <em>Becoming a Technical Leader</em> felt like a self-help book, so I couldn&#x2019;t recommend it, either. On the flip side, <em>The Pragmatic Programmer</em> and <em>Surely You&#x2019;re Joking, Mr Feynman</em> were <strong>absolutely awesome</strong> reads. <em>Programming Pearls</em> was also a fantastic classic I really enjoyed.</p> <blockquote> <p>I already have a ton of books lined up to read in 2014. In particular, I&#x2019;d like to read more about compilers, operating systems, and mobile development.</p> </blockquote> <h2 id="joining-a-community">Joining a Community</h2> <p>Ever since I started blogging I became much more aware of the community around me, I started using Twitter <em>(yeah, in 2013, I know)</em>, and following a lot more blogs, and a lot more actively than I had been doing. While I might argue sometimes that this might&#x2019;ve hurt my productivity, I actually just came up with a solution to keep in check my addiction to staying up to date. <a href="https://github.com/bevacqua/hose" target="_blank" aria-label="Trap access to domains you use frequently, from 9 to 5"><code class="md-code md-code-inline">hose</code></a> is a command line tool that easily knocks off domains so you get to work.</p> <p>If you&#x2019;re interested in joining the community at large, there&#x2019;s an <a href="https://ponyfoo.com/2013/07/02/tech-news-reading-hints" aria-label="Tech News Reading Hints">old blog post</a> which might help you get started. If you don&#x2019;t really know <em>what</em> to read, check out <a href="https://github.com/ponyfoo/linkdump/blob/master/rss-opml.xml" target="_blank" aria-label="Feeds I follow, in opml-xml format">the RSS feeds I subscribe to</a>. I tend to update that file somewhat regularly.</p> <p>I came into some issues some time after joining the community. Namely, I started obsessing about different social metrics I can&#x2019;t really act upon. Closely tracking this data is a waste of time and you should stop doing it. Here&#x2019;s an awesome blog post on the subject: <a href="http://24ways.org/2013/managing-a-mind/" target="_blank" aria-label="Managing a Mind on 24ways.org">Managing a Mind</a>.</p> <blockquote> <p>Next year, I&#x2019;m hoping not to obsess over page views, stars, and followers.</p> </blockquote> <h2 id="becoming-heard">Becoming Heard</h2> <p>According to Google Analytics, this blog received roughly 100k page views in the March-December period, which feels pretty good for a first year, but I don&#x2019;t really have any data to compare its performance to. At some point in June I published <a href="https://ponyfoo.com/2013/06/10/uncovering-the-native-dom-api" aria-label="Uncovering the Native DOM API">Uncovering the Native DOM API</a>, which was, I think, the first article in this blog to appear on <a href="http://javascriptweekly.com/" target="_blank" aria-label="JavaScript Weekly Newsletter">JavaScript weekly</a>, resulting in an exciting 1000 views in a single day. The follow-up article, <a href="https://ponyfoo.com/2013/07/09/getting-over-jquery" aria-label="Getting Over jQuery">Getting Over jQuery</a>, also did pretty good, becoming the most widely read article so far, with close to 10k visits, overall. Here&#x2019;s a graph showing page views over time.</p> <p><img alt="visits.png" title="Visitors to Pony Foo over time, during 2013" class="" src="https://i.imgur.com/0XfwM70.png"></p> <p>Popular blog articles are below, ordered by page views.</p> <ol> <li><a href="https://ponyfoo.com/2013/07/09/getting-over-jquery" aria-label="Check it out!">Getting Over jQuery</a> <em>~10k</em></li> <li><a href="https://ponyfoo.com/2013/07/12/teach-yourself-nodejs-in-10-steps" aria-label="Check it out!">Teach Yourself Node.js in 10 Steps</a> <em>~8k</em></li> <li><a href="https://ponyfoo.com/2013/09/28/we-dont-want-your-coffee" aria-label="Check it out!">We don&#x2019;t want your Coffee</a> <em>~7.6k</em></li> <li><a href="https://ponyfoo.com/2013/06/10/uncovering-the-native-dom-api" aria-label="Check it out!">Uncovering the Native DOM API</a> <em>~5.8k</em></li> <li><a href="https://ponyfoo.com/2013/11/13/grunt-tips-and-tricks" aria-label="Check it out!">Grunt Tips and Tricks</a> <em>~5k</em></li> <li><a href="https://ponyfoo.com/2013/09/19/deploying-node-apps-to-aws-using-grunt" aria-label="Check it out!">Deploying Node apps to AWS using Grunt</a> <em>~3.6k</em></li> <li><a href="https://ponyfoo.com/2013/08/27/the-angular-way" aria-label="Check it out!">The Angular Way</a> <em>~3.5k</em></li> <li><a href="https://ponyfoo.com/2013/12/14/9-quick-tips-about-npm" aria-label="Check it out!">9 Quick Tips About npm</a> <em>~3.1k</em></li> <li><a href="https://ponyfoo.com/2013/11/19/fun-with-native-arrays" aria-label="Check it out!">Fun with Native Arrays</a> <em>~2.8k</em></li> <li><a href="https://ponyfoo.com/2013/09/26/continuous-development-in-nodejs" aria-label="Check it out!">Continuous Development in Node.js</a> <em>~2.4k</em></li> </ol> <p>This was definitely <strong>an exciting first year</strong> for the blog, and I hope to see the trend rise in 2014.</p> <blockquote> <p>In 2014 I&#x2019;ll strive to keep on writing and learning through educating myself as I investigate topics to to talk about on this blog.</p> </blockquote> <h2 id="contributing">Contributing</h2> <p>Lastly, I&#x2019;m glad about the contributions I was able to make to open-source throughout 2013. Most notably, <a href="https://github.com/bevacqua/grunt-ec2" target="_blank" aria-label="Create, deploy to, and shutdown Amazon EC2 instances">grunt-ec2</a>, which lets you create EC2 instances and deploy Node applications to them in a <em>completely automated fashion</em>. In developing that Grunt plugin I learned a lot about Amazon Web Services and <code class="md-code md-code-inline">nginx</code>, and that has been a tremendously rewarding experience for me.</p> <p>In 2014, hopefully, my <a href="http://bevacqua.io/buildfirst" target="_blank" aria-label="JavaScript Application Design: A Build First Approach">book on JavaScript Application Design</a>, which I started putting together in 2013, will go to print, and I&#x2019;m also really excited about that, being my first book, and everything.</p> <blockquote> <p>Next year I&#x2019;ll try and participate in other people&#x2019;s open-source projects, in addition to developing my own.</p> </blockquote> <p>Overall, 2013 was a great year where I learned a lot of things, and I hope 2014 is exactly the same in that regard. <strong>Happy new year everyone!</strong></p> <p><img alt="ponyfoo.png" title="Happy New Year!" class="" src="https://i.imgur.com/ElJqTpR.png"></p> <p>Such pony.</p></div>
